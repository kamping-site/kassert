name: C/C++ CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        compiler:
          - { name: Clang, cc: clang, cxx: clang++ }
          - { name: GNU, cc: gcc-10, cxx: g++-10 }
          - { name: Intel, cc: icx, cxx: icpx }
        build-mode: [Debug, Release]
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: install-gcc 
      if: matrix.compiler.name == 'GNU'
      run: |
        sudo apt-get install -y gcc-10
    - name: export-compiler
      run: |
        echo CXX=${{ matrix.compiler.cxx }} >> $GITHUB_ENV
        echo CC=${{ matrix.compiler.cc }} >> $GITHUB_ENV
# Caching from https://stackoverflow.com/questions/59269850/caching-apt-packages-in-github-actions-workflow
    - name: cache-intel-oneapi 
      if: matrix.compiler.name == 'Intel'
      uses: actions/cache@v2
      id: cache-intel-oneapi 
      with:
        path: "~/intel-openapi/"
        key: "todo"
    - name: setup-intel-oneapi
      if: matrix.compiler.name == 'Intel'
      env:
        CACHE_HIT: ${{steps.cache-intel-oneapi.outputs.cache-hit}}
          #INTEL_ONEAPI_VERSION: ${{secrets.INTEL_ONEAPI_VERSION}}
      run: |
        if [[ "$CACHE_HIT" == 'true' ]]; then 
          sudo cp --verbose --force --recursive ~/intel-oneapi/* / 
        else 
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update
          sudo apt-get install -y intel-oneapi-common-vars intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic #="$INTEL_ONEAPI_VERSION"
          mkdir -p ~/intel-oneapi/
          sudo dpkg -L intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/intel-oneapi/
        fi
    - name: source-intel-vars
      if: matrix.compiler.name == 'Intel'
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV
    - name: print-compiler-version
      run: |
        $CC --version 
        $CXX --version
    - name: cpu-cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
    - name: print-cpu-cores
      run: echo ${{ steps.cpu-cores.outputs.count }}
    - name: cmake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build-mode }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} -DKASSERT_WARNINGS_ARE_ERRORS=On -DKASSERT_BUILD_TESTS=On
    - name: build
      run: cmake --build build/ --parallel ${{ steps.cpu-cores.outputs.count }}
    - name: run tests
      run: ctest --output-on-failure --parallel ${{ steps.cpu-cores.outputs.count }} --test-dir build/
